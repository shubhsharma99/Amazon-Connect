AWSTemplateFormatVersion: '2010-09-09'
Description: Amazon Connect setup

Parameters:
  InstanceAlias:
    Type: String
    Description: Unique alias for Connect instance
  AgentPassword:
    Type: String
    NoEcho: true
    Description: Initial password for all Connect agents
  OutboundCallerIdName:
    Type: String
    Default: MyConnect
    Description: Outbound Caller ID name for outbound queue

Resources:

  ConnectInstance:
    Type: AWS::Connect::Instance
    Properties:
      IdentityManagementType: CONNECT_MANAGED
      InstanceAlias: !Ref InstanceAlias
      Attributes:
        InboundCalls: true
        OutboundCalls: true

  HoursOfOperation:
    Type: AWS::Connect::HoursOfOperation
    Properties:
      Name: DefaultBusinessHours
      Description: "Business hours (UTC Mon–Fri, 10–18)"
      InstanceArn: !GetAtt ConnectInstance.Arn
      TimeZone: UTC
      Config:
        - Day: MONDAY
          StartTime: { Hours: 10, Minutes: 0 }
          EndTime:   { Hours: 18, Minutes: 0 }
        - Day: TUESDAY
          StartTime: { Hours: 10, Minutes: 0 }
          EndTime:   { Hours: 18, Minutes: 0 }
        - Day: WEDNESDAY
          StartTime: { Hours: 10, Minutes: 0 }
          EndTime:   { Hours: 18, Minutes: 0 }
        - Day: THURSDAY
          StartTime: { Hours: 10, Minutes: 0 }
          EndTime:   { Hours: 18, Minutes: 0 }
        - Day: FRIDAY
          StartTime: { Hours: 10, Minutes: 0 }
          EndTime:   { Hours: 18, Minutes: 0 }

  SalesQueue:
    Type: AWS::Connect::Queue
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Name: SalesQueue
      HoursOfOperationArn: !Ref HoursOfOperation

  TechQueue:
    Type: AWS::Connect::Queue
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Name: TechSupportQueue
      HoursOfOperationArn: !Ref HoursOfOperation

  OutboundQueue:
    Type: AWS::Connect::Queue
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Name: OutboundQueue
      HoursOfOperationArn: !Ref HoursOfOperation
      OutboundCallerConfig:
        OutboundCallerIdName: !Ref OutboundCallerIdName

  SalesRoutingProfile:
    Type: AWS::Connect::RoutingProfile
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Name: SalesProfile
      Description: Routing for Sales agents
      DefaultOutboundQueueArn: !GetAtt OutboundQueue.QueueArn
      MediaConcurrencies:
        - Channel: VOICE
          Concurrency: 1
      QueueConfigs:
        - QueueReference:
            QueueArn: !GetAtt SalesQueue.QueueArn
            Channel: VOICE
          Priority: 1
          Delay: 0
        - QueueReference:
            QueueArn: !GetAtt OutboundQueue.QueueArn
            Channel: VOICE
          Priority: 2
          Delay: 0

  TechRoutingProfile:
    Type: AWS::Connect::RoutingProfile
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Name: TechSupportProfile
      Description: Routing for Tech Support agents
      DefaultOutboundQueueArn: !GetAtt OutboundQueue.QueueArn
      MediaConcurrencies:
        - Channel: VOICE
          Concurrency: 1
      QueueConfigs:
        - QueueReference:
            QueueArn: !GetAtt TechQueue.QueueArn
            Channel: VOICE
          Priority: 1
          Delay: 0
        - QueueReference:
            QueueArn: !GetAtt OutboundQueue.QueueArn
            Channel: VOICE
          Priority: 2
          Delay: 0

  # Security profiles
  SalesSecurityProfile:
    Type: AWS::Connect::SecurityProfile
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      SecurityProfileName: SalesAgentProfile
      Description: Security profile for Sales agents

  TechSecurityProfile:
    Type: AWS::Connect::SecurityProfile
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      SecurityProfileName: TechAgentProfile
      Description: Security profile for Tech agents

  MonitorSecurityProfile:
    Type: AWS::Connect::SecurityProfile
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      SecurityProfileName: MonitorAgentProfile
      Description: Security profile for Monitoring agent

  # Agent users
  SalesAgentUser:
    Type: AWS::Connect::User
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Username: sales.agent1
      Password: !Ref AgentPassword
      IdentityInfo:
        FirstName: John
        LastName: Smith
        Email: john.smith@example.com
      PhoneConfig:
        PhoneType: SOFT_PHONE
        AutoAccept: true
        AfterContactWorkTimeLimit: 300
      RoutingProfileArn: !GetAtt SalesRoutingProfile.RoutingProfileArn
      SecurityProfileArns: 
        - !GetAtt SalesSecurityProfile.SecurityProfileArn

  TechAgentUser:
    Type: AWS::Connect::User
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Username: tech.agent1
      Password: !Ref AgentPassword
      IdentityInfo:
        FirstName: Alice
        LastName: Kumar
        Email: alice.kumar@example.com
      PhoneConfig:
        PhoneType: SOFT_PHONE
        AutoAccept: true
        AfterContactWorkTimeLimit: 300
      RoutingProfileArn: !GetAtt TechRoutingProfile.RoutingProfileArn
      SecurityProfileArns:
        - !GetAtt TechSecurityProfile.SecurityProfileArn

  MonitorAgentUser:
    Type: AWS::Connect::User
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Username: monitor.agent1
      Password: !Ref AgentPassword
      IdentityInfo:
        FirstName: Monitor
        LastName: Agent
        Email: monitor.agent1@example.com
      PhoneConfig:
        PhoneType: SOFT_PHONE
        AutoAccept: true
        AfterContactWorkTimeLimit: 300
      RoutingProfileArn: !GetAtt TechRoutingProfile.RoutingProfileArn
      SecurityProfileArns:
        - !GetAtt MonitorSecurityProfile.SecurityProfileArn

Outputs:
  ConnectLoginURL:
    Description: Connect CCP login URL
    Value: !Sub "https://${InstanceAlias}.awsapps.com/connect/ccp-v2/"




# AWSTemplateFormatVersion: '2010-09-09' 
# Description: Amazon Connect setup

# Parameters:
#   InstanceAlias:
#     Type: String
#     # Default: MyConnectInstanceABC01
#     Description: Unique alias for Amazon Connect instance

#   AgentPassword:
#     Type: String
#     NoEcho: true
#     Description: Initial password for Connect agent login

# Resources:

#   ConnectInstance:
#     Type: AWS::Connect::Instance
#     Properties:
#       IdentityManagementType: CONNECT_MANAGED
#       InstanceAlias: !Ref InstanceAlias
#       Attributes:
#         InboundCalls: true
#         OutboundCalls: true

#   HoursOfOperation:
#     Type: AWS::Connect::HoursOfOperation
#     Properties:
#       Name: DefaultHours
#       Description: Business hours (UTC)
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       TimeZone: UTC
#       Config:
#         - Day: MONDAY
#           StartTime: { Hours: 10, Minutes: 0 }
#           EndTime: { Hours: 18, Minutes: 0 }
#         - Day: TUESDAY
#           StartTime: { Hours: 10, Minutes: 0 }
#           EndTime: { Hours: 18, Minutes: 0 }
#         - Day: WEDNESDAY
#           StartTime: { Hours: 10, Minutes: 0 }
#           EndTime: { Hours: 18, Minutes: 0 }
#         - Day: THURSDAY
#           StartTime: { Hours: 10, Minutes: 0 }
#           EndTime: { Hours: 18, Minutes: 0 }
#         - Day: FRIDAY
#           StartTime: { Hours: 10, Minutes: 0 }
#           EndTime: { Hours: 18, Minutes: 0 }

#   InboundQueue:
#     Type: AWS::Connect::Queue
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       Name: InboundQueue
#       HoursOfOperationArn: !Ref HoursOfOperation

#   OutboundQueue:
#     Type: AWS::Connect::Queue
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       Name: OutboundQueue
#       HoursOfOperationArn: !Ref HoursOfOperation
#       OutboundCallerConfig:
#         OutboundCallerIdName: MyConnect
#         # OutboundCallerIdNumberArn and OutboundFlowArn will be assigned manually in the console

#   RoutingProfile:
#     Type: AWS::Connect::RoutingProfile
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       Name: AgentRouting
#       Description: In/Outbound routing
#       DefaultOutboundQueueArn: !GetAtt OutboundQueue.QueueArn
#       MediaConcurrencies:
#         - Channel: VOICE
#           Concurrency: 1
#       QueueConfigs:
#         - QueueReference:
#             QueueArn: !GetAtt InboundQueue.QueueArn
#             Channel: VOICE
#           Priority: 1
#           Delay: 0
#         - QueueReference:
#             QueueArn: !GetAtt OutboundQueue.QueueArn
#             Channel: VOICE
#           Priority: 2
#           Delay: 0

#   AgentSecurityProfile:
#     Type: AWS::Connect::SecurityProfile
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       SecurityProfileName: AgentSecurity
#       Description: Basic profile for agents

#   AgentUser:
#     Type: AWS::Connect::User
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       Username: agent1
#       Password: !Ref AgentPassword
#       IdentityInfo:
#         FirstName: Jane
#         LastName: Doe
#         Email: jane.doe@example.com
#       PhoneConfig:
#         PhoneType: SOFT_PHONE
#         AutoAccept: true
#         AfterContactWorkTimeLimit: 300
#       RoutingProfileArn: !Ref RoutingProfile
#       SecurityProfileArns:
#         - !Ref AgentSecurityProfile

# Outputs:
#   ConnectLoginURL:
#     Description: "Agent CCP login URL"
#     Value: !Sub "https://${InstanceAlias}.awsapps.com/connect/ccp-v2/"










