AWSTemplateFormatVersion: '2010-09-09'
Description: Amazon Connect setup with Sales, TechSupport, Monitor agents and Lambda integration

Parameters:
  InstanceAlias:
    Type: String
    Description: Unique alias for Connect instance
  AgentPassword:
    Type: String
    NoEcho: true
    Description: Initial password for all Connect agents
  OutboundCallerIdName:
    Type: String
    Default: MyConnect
    Description: Outbound Caller ID name for outbound queue

Resources:

  ConnectInstance:
    Type: AWS::Connect::Instance
    Properties:
      IdentityManagementType: CONNECT_MANAGED
      InstanceAlias: !Ref InstanceAlias
      Attributes:
        InboundCalls: true
        OutboundCalls: true

  HoursOfOperation:
    Type: AWS::Connect::HoursOfOperation
    Properties:
      Name: DefaultBusinessHours
      Description: "Business hours (UTC Mon–Fri, 10–18)"
      InstanceArn: !GetAtt ConnectInstance.Arn
      TimeZone: UTC
      Config:
        - Day: MONDAY
          StartTime: { Hours: 10, Minutes: 0 }
          EndTime:   { Hours: 18, Minutes: 0 }
        - Day: TUESDAY
          StartTime: { Hours: 10, Minutes: 0 }
          EndTime:   { Hours: 18, Minutes: 0 }
        - Day: WEDNESDAY
          StartTime: { Hours: 10, Minutes: 0 }
          EndTime:   { Hours: 18, Minutes: 0 }
        - Day: THURSDAY
          StartTime: { Hours: 10, Minutes: 0 }
          EndTime:   { Hours: 18, Minutes: 0 }
        - Day: FRIDAY
          StartTime: { Hours: 10, Minutes: 0 }
          EndTime:   { Hours: 18, Minutes: 0 }

  SalesQueue:
    Type: AWS::Connect::Queue
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Name: SalesQueue
      HoursOfOperationArn: !Ref HoursOfOperation

  TechQueue:
    Type: AWS::Connect::Queue
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Name: TechSupportQueue
      HoursOfOperationArn: !Ref HoursOfOperation

  OutboundQueue:
    Type: AWS::Connect::Queue
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Name: OutboundQueue
      HoursOfOperationArn: !Ref HoursOfOperation
      OutboundCallerConfig:
        OutboundCallerIdName: !Ref OutboundCallerIdName

  SalesRoutingProfile:
    Type: AWS::Connect::RoutingProfile
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Name: SalesProfile
      Description: Routing for Sales agents
      DefaultOutboundQueueArn: !GetAtt OutboundQueue.QueueArn
      MediaConcurrencies:
        - Channel: VOICE
          Concurrency: 1
      QueueConfigs:
        - QueueReference:
            QueueArn: !GetAtt SalesQueue.QueueArn
            Channel: VOICE
          Priority: 1
          Delay: 0
        - QueueReference:
            QueueArn: !GetAtt OutboundQueue.QueueArn
            Channel: VOICE
          Priority: 2
          Delay: 0

  TechRoutingProfile:
    Type: AWS::Connect::RoutingProfile
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Name: TechSupportProfile
      Description: Routing for Tech Support agents
      DefaultOutboundQueueArn: !GetAtt OutboundQueue.QueueArn
      MediaConcurrencies:
        - Channel: VOICE
          Concurrency: 1
      QueueConfigs:
        - QueueReference:
            QueueArn: !GetAtt TechQueue.QueueArn
            Channel: VOICE
          Priority: 1
          Delay: 0
        - QueueReference:
            QueueArn: !GetAtt OutboundQueue.QueueArn
            Channel: VOICE
          Priority: 2
          Delay: 0

  SalesSecurityProfile:
    Type: AWS::Connect::SecurityProfile
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      SecurityProfileName: SalesAgentProfile
      Description: Security profile for Sales agents

  TechSecurityProfile:
    Type: AWS::Connect::SecurityProfile
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      SecurityProfileName: TechAgentProfile
      Description: Security profile for Tech agents

  MonitorSecurityProfile:
    Type: AWS::Connect::SecurityProfile
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      SecurityProfileName: MonitorAgentProfile
      Description: Security profile for Monitoring agent

  SalesAgentUser:
    Type: AWS::Connect::User
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Username: sales.agent1
      Password: !Ref AgentPassword
      IdentityInfo:
        FirstName: John
        LastName: Smith
        Email: john.smith@example.com
      PhoneConfig:
        PhoneType: SOFT_PHONE
        AutoAccept: true
        AfterContactWorkTimeLimit: 300
      RoutingProfileArn: !GetAtt SalesRoutingProfile.RoutingProfileArn
      SecurityProfileArns: 
        - !GetAtt SalesSecurityProfile.SecurityProfileArn

  TechAgentUser:
    Type: AWS::Connect::User
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Username: tech.agent1
      Password: !Ref AgentPassword
      IdentityInfo:
        FirstName: Alice
        LastName: Kumar
        Email: alice.kumar@example.com
      PhoneConfig:
        PhoneType: SOFT_PHONE
        AutoAccept: true
        AfterContactWorkTimeLimit: 300
      RoutingProfileArn: !GetAtt TechRoutingProfile.RoutingProfileArn
      SecurityProfileArns:
        - !GetAtt TechSecurityProfile.SecurityProfileArn

  MonitorAgentUser:
    Type: AWS::Connect::User
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      Username: monitor.agent1
      Password: !Ref AgentPassword
      IdentityInfo:
        FirstName: Monitor
        LastName: Agent
        Email: monitor.agent1@example.com
      PhoneConfig:
        PhoneType: SOFT_PHONE
        AutoAccept: true
        AfterContactWorkTimeLimit: 300
      RoutingProfileArn: !GetAtt TechRoutingProfile.RoutingProfileArn
      SecurityProfileArns:
        - !GetAtt MonitorSecurityProfile.SecurityProfileArn

  # === Lambda Role for Connect ===
  ConnectLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ConnectLambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - connect:*
                Resource: "*"

  # === Lambda Function ===
  RetrieveDataLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: RetrieveDataLambda
      Runtime: python3.12
      Handler: index.lambda_handler
      Role: !GetAtt ConnectLambdaExecutionRole.Arn
      Code:
        ZipFile: |
          def lambda_handler(event, context):
              return {
                  "statusCode": 200,
                  "body": "Hello from Connect Lambda"
              }

  # === Permission for Connect to invoke Lambda ===
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref RetrieveDataLambda
      Action: lambda:InvokeFunction
      Principal: connect.amazonaws.com

Outputs:
  ConnectLoginURL:
    Description: Connect CCP login URL
    Value: !Sub "https://${InstanceAlias}.awsapps.com/connect/ccp-v2/"



# AWSTemplateFormatVersion: '2010-09-09'
# Description: Amazon Connect setup with Sales, TechSupport, Monitor agents

# Parameters:
#   InstanceAlias:
#     Type: String
#     Description: Unique alias for Connect instance
#   AgentPassword:
#     Type: String
#     NoEcho: true
#     Description: Initial password for all Connect agents
#   OutboundCallerIdName:
#     Type: String
#     Default: MyConnect
#     Description: Outbound Caller ID name for outbound queue

# Resources:

#   ConnectInstance:
#     Type: AWS::Connect::Instance
#     Properties:
#       IdentityManagementType: CONNECT_MANAGED
#       InstanceAlias: !Ref InstanceAlias
#       Attributes:
#         InboundCalls: true
#         OutboundCalls: true

#   HoursOfOperation:
#     Type: AWS::Connect::HoursOfOperation
#     Properties:
#       Name: DefaultBusinessHours
#       Description: "Business hours (UTC Mon–Fri, 10–18)"
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       TimeZone: UTC
#       Config:
#         - Day: MONDAY
#           StartTime: { Hours: 10, Minutes: 0 }
#           EndTime:   { Hours: 18, Minutes: 0 }
#         - Day: TUESDAY
#           StartTime: { Hours: 10, Minutes: 0 }
#           EndTime:   { Hours: 18, Minutes: 0 }
#         - Day: WEDNESDAY
#           StartTime: { Hours: 10, Minutes: 0 }
#           EndTime:   { Hours: 18, Minutes: 0 }
#         - Day: THURSDAY
#           StartTime: { Hours: 10, Minutes: 0 }
#           EndTime:   { Hours: 18, Minutes: 0 }
#         - Day: FRIDAY
#           StartTime: { Hours: 10, Minutes: 0 }
#           EndTime:   { Hours: 18, Minutes: 0 }

#   SalesQueue:
#     Type: AWS::Connect::Queue
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       Name: SalesQueue
#       HoursOfOperationArn: !Ref HoursOfOperation

#   TechQueue:
#     Type: AWS::Connect::Queue
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       Name: TechSupportQueue
#       HoursOfOperationArn: !Ref HoursOfOperation

#   # OutboundQueue:
#   #   Type: AWS::Connect::Queue
#   #   Properties:
#   #     InstanceArn: !GetAtt ConnectInstance.Arn
#   #     Name: OutboundQueue
#   #     HoursOfOperationArn: !Ref HoursOfOperation
#   #     OutboundCallerConfig:
#   #       OutboundCallerIdName: !Ref OutboundCallerIdName

#   SalesRoutingProfile:
#     Type: AWS::Connect::RoutingProfile
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       Name: SalesProfile
#       Description: Routing for Sales agents
#       DefaultOutboundQueueArn: !GetAtt OutboundQueue.QueueArn
#       MediaConcurrencies:
#         - Channel: VOICE
#           Concurrency: 1
#       QueueConfigs:
#         - QueueReference:
#             QueueArn: !GetAtt SalesQueue.QueueArn
#             Channel: VOICE
#           Priority: 1
#           Delay: 0
#         - QueueReference:
#             QueueArn: !GetAtt OutboundQueue.QueueArn
#             Channel: VOICE
#           Priority: 2
#           Delay: 0

#   TechRoutingProfile:
#     Type: AWS::Connect::RoutingProfile
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       Name: TechSupportProfile
#       Description: Routing for Tech Support agents
#       DefaultOutboundQueueArn: !GetAtt OutboundQueue.QueueArn
#       MediaConcurrencies:
#         - Channel: VOICE
#           Concurrency: 1
#       QueueConfigs:
#         - QueueReference:
#             QueueArn: !GetAtt TechQueue.QueueArn
#             Channel: VOICE
#           Priority: 1
#           Delay: 0
#         - QueueReference:
#             QueueArn: !GetAtt OutboundQueue.QueueArn
#             Channel: VOICE
#           Priority: 2
#           Delay: 0

#   # Security profiles
#   SalesSecurityProfile:
#     Type: AWS::Connect::SecurityProfile
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       SecurityProfileName: SalesAgentProfile
#       Description: Security profile for Sales agents

#   TechSecurityProfile:
#     Type: AWS::Connect::SecurityProfile
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       SecurityProfileName: TechAgentProfile
#       Description: Security profile for Tech agents

#   MonitorSecurityProfile:
#     Type: AWS::Connect::SecurityProfile
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       SecurityProfileName: MonitorAgentProfile
#       Description: Security profile for Monitoring agent

#   # Agent users
#   SalesAgentUser:
#     Type: AWS::Connect::User
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       Username: sales.agent1
#       Password: !Ref AgentPassword
#       IdentityInfo:
#         FirstName: John
#         LastName: Smith
#         Email: john.smith@example.com
#       PhoneConfig:
#         PhoneType: SOFT_PHONE
#         AutoAccept: true
#         AfterContactWorkTimeLimit: 300
#       RoutingProfileArn: !GetAtt SalesRoutingProfile.RoutingProfileArn
#       SecurityProfileArns: 
#         - !GetAtt SalesSecurityProfile.SecurityProfileArn

#   TechAgentUser:
#     Type: AWS::Connect::User
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       Username: tech.agent1
#       Password: !Ref AgentPassword
#       IdentityInfo:
#         FirstName: Alice
#         LastName: Kumar
#         Email: alice.kumar@example.com
#       PhoneConfig:
#         PhoneType: SOFT_PHONE
#         AutoAccept: true
#         AfterContactWorkTimeLimit: 300
#       RoutingProfileArn: !GetAtt TechRoutingProfile.RoutingProfileArn
#       SecurityProfileArns:
#         - !GetAtt TechSecurityProfile.SecurityProfileArn

#   MonitorAgentUser:
#     Type: AWS::Connect::User
#     Properties:
#       InstanceArn: !GetAtt ConnectInstance.Arn
#       Username: monitor.agent1
#       Password: !Ref AgentPassword
#       IdentityInfo:
#         FirstName: Monitor
#         LastName: Agent
#         Email: monitor.agent1@example.com
#       PhoneConfig:
#         PhoneType: SOFT_PHONE
#         AutoAccept: true
#         AfterContactWorkTimeLimit: 300
#       RoutingProfileArn: !GetAtt TechRoutingProfile.RoutingProfileArn
#       SecurityProfileArns:
#         - !GetAtt MonitorSecurityProfile.SecurityProfileArn

# Outputs:
#   ConnectLoginURL:
#     Description: Connect CCP login URL
#     Value: !Sub "https://${InstanceAlias}.awsapps.com/connect/ccp-v2/"


